//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AirLineService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Passenger", Namespace="http://schemas.datacontract.org/2004/07/WcfService1.Models")]
    public partial class Passenger : object
    {
        
        private string CnicField;
        
        private string PassengerAddressField;
        
        private string PassengerGenderField;
        
        private string PassengerIdField;
        
        private string PassengerNameField;
        
        private string PassengerNationalityField;
        
        private string PassengerPassportField;
        
        private string PassengerPhoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cnic
        {
            get
            {
                return this.CnicField;
            }
            set
            {
                this.CnicField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassengerAddress
        {
            get
            {
                return this.PassengerAddressField;
            }
            set
            {
                this.PassengerAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassengerGender
        {
            get
            {
                return this.PassengerGenderField;
            }
            set
            {
                this.PassengerGenderField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassengerId
        {
            get
            {
                return this.PassengerIdField;
            }
            set
            {
                this.PassengerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassengerName
        {
            get
            {
                return this.PassengerNameField;
            }
            set
            {
                this.PassengerNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassengerNationality
        {
            get
            {
                return this.PassengerNationalityField;
            }
            set
            {
                this.PassengerNationalityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassengerPassport
        {
            get
            {
                return this.PassengerPassportField;
            }
            set
            {
                this.PassengerPassportField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassengerPhone
        {
            get
            {
                return this.PassengerPhoneField;
            }
            set
            {
                this.PassengerPhoneField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AirLineService.IService1")]
    public interface IService1
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPassengerDetails", ReplyAction="http://tempuri.org/IService1/GetPassengerDetailsResponse")]
        System.Threading.Tasks.Task<AirLineService.Passenger> GetPassengerDetailsAsync(int passengerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetList", ReplyAction="http://tempuri.org/IService1/GetListResponse")]
        System.Threading.Tasks.Task<AirLineService.Passenger[]> GetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPass", ReplyAction="http://tempuri.org/IService1/AddPassResponse")]
        System.Threading.Tasks.Task AddPassAsync(AirLineService.Passenger P);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IService1Channel : AirLineService.IService1, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class Service1Client : System.ServiceModel.ClientBase<AirLineService.IService1>, AirLineService.IService1
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Service1Client() : 
                base(Service1Client.GetDefaultBinding(), Service1Client.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService1.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), Service1Client.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int val)
        {
            return base.Channel.GetDataAsync(val);
        }
        
        public System.Threading.Tasks.Task<AirLineService.Passenger> GetPassengerDetailsAsync(int passengerId)
        {
            return base.Channel.GetPassengerDetailsAsync(passengerId);
        }
        
        public System.Threading.Tasks.Task<AirLineService.Passenger[]> GetListAsync()
        {
            return base.Channel.GetListAsync();
        }
        
        public System.Threading.Tasks.Task AddPassAsync(AirLineService.Passenger P)
        {
            return base.Channel.AddPassAsync(P);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:60349/Service1.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return Service1Client.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return Service1Client.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IService1,
        }
    }
}
